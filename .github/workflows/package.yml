name: Package and release

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    tags:
      - '**'
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        game_version: [ 'retail', 'classic', 'bcc' ]

    env:
      CF_API_KEY: ${{ secrets.CF_API_KEY }}
      WOWI_API_TOKEN: ${{ secrets.WOWI_API_TOKEN }}
      GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v1

      - name: Get build utils
        uses: actions/checkout@v2
        with:
          repository: Beast-Masters-addons/build_utils
          path: tests/build_utils

      - name: Get dependencies
        uses: BigWigsMods/packager@v1.0.2
        with:
          args: -g ${{ matrix.game_version }} -d -z

      - name: Move libs
        run: mv .release/LibInventory/libs .

      - name: Install luaunit and luacov
        run: |
          sudo apt-get update
          sudo apt-get -y install luarocks
          sudo luarocks install luaunit
          sudo luarocks install luacov

      - name: Run tests
        working-directory: ./tests
        run: |
          lua -l luacov InventoryTest.lua

      - name: Install and run Luacheck
        uses: nebularg/actions-luacheck@v1
        with:
          path: 'addon'
          annotate: warning

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.0.2

      - name: WoW Packager
        uses: BigWigsMods/packager@v1
        with:
          args: -g ${{ matrix.game_version }}
